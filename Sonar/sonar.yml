---
- hosts: sonar
  become: true
  roles:
    - role: jdauphant.ssl-certs
      ssl_certs_local_cert_data: "{{vault_cert_data}}"
      ssl_certs_local_privkey_data: "{{vault_privkey_data}}"
    - role: jdauphant.nginx
      nginx_configs:
        ssl:
        - ssl_certificate_key {{ssl_certs_privkey_path}}
        - ssl_certificate     {{ssl_certs_cert_path}}
      nginx_sites:
        default:
          template: sonar.conf.j2
          server_name: sonar.entelect.co.za
  tasks:
    - name: Add the webupd8team Java PPA
      apt_repository:
        repo: ppa:webupd8team/java

    - name: Automatically select the Oracle License
      shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections

    - name: Install Java 8 & PostgreSQL
      package: name={{item}} state=present
      with_items:
        - oracle-java8-installer
        - postgresql
        - postgresql-contrib
        - unzip
        - python3-psycopg2

    - name: Copy the Sonarqube PostgreSQL setup script
      copy:
        src: "files/sonar/dbSetup.sh"
        dest: "/tmp/dbSetup.sh"
        mode: 0744
        owner: "postgres"

    - name: Strip carriage returns from scripts to ensure this works from Windows VMs
      replace:
        path: "/tmp/dbSetup.sh"
        regexp: "[\r]$"
        replace: ""

    - name: Create postgres user and DB for Sonarqube
      become: yes
      become_user: postgres
      command: "/tmp/dbSetup.sh {{ sonar_db_pass }}"

#    - name: Create postgres user for SonarQube
#      become: yes
#      become_user: postgres
#      postgresql_user:
#        name: "{{ sonar_db_user }}"
#        password: 'str[\"md5\"] + md5[ {{ sonar_db_pass }} + {{ sonar_db_user }} ]'
#        encrypted: yes
#
#    - name: Create the sonar database
#      postgresql_db:
#        name: "{{ sonar_db_name }}"
#        owner: "{{ sonar_db_user }}"

    - name: Create the sonar user for running the Sonarqube services
      user:
        name: sonar
        comment: System user for running Sonarqube

    - name: Download Sonarqube
      get_url:
        url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonar_version }}.zip"
        dest: "/srv/sonarqube-{{ sonar_version }}.zip"

    - name: Extract Sonarqube
      unarchive:
        src: "/srv/sonarqube-{{ sonar_version }}.zip"
        dest: "/srv"
        copy: no
        owner: sonar

    - name: Link this version of sonarqube as the server Sonarqube version
      file:
        src: "/srv/sonarqube-{{ sonar_version }}"
        dest: "/srv/sonarqube"
        state: link
        owner: sonar

    - name: Configure Sonarqube
      template:
        src: templates/sonar.properties.j2
        dest: /srv/sonarqube/conf/sonar.properties
        owner: sonar
        group: sonar
        mode: 0644
        backup: yes

    - name: Configure Sonarqube to run as the sonar user
      lineinfile:
        path: "/srv/sonarqube/bin/linux-x86-64/sonar.sh"
        regexp: "RUN_AS_USER=sonar"
        insertafter: "#RUN_AS_USER="
        line: "RUN_AS_USER=sonar"

    - name: Copy the Sonarqube service configuration file
      copy:
        src: "files/sonar/sonarqube.service"
        dest: "/etc/systemd/system/sonarqube.service"

    - name: Configure OS security limits for the sonar user
      copy:
        src: "files/sonar/sonarqube.limits"
        dest: "/etc/security/limits.d/99-sonarqube.conf"

    - name: Configure kernel level limits for ElasticSearch
      copy:
        src: "files/sonar/sonarqube.sysctl"
        dest: "/etc/sysctl.d/99-sonarqube.conf"

    - name: Install the Sonarqube LDAP plugin
      get_url:
        url: "https://binaries.sonarsource.com/Distribution/sonar-ldap-plugin/sonar-ldap-plugin-{{ sonar_ldap_version }}.jar"
        dest: "/srv/sonarqube/extensions/plugins"
        owner: sonar
        group: sonar

    - name: Enable the NGINX service
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: nginx

    - name: Enable the Sonarqube service
      systemd:
        state: started
        enabled: yes
        daemon_reload: yes
        name: sonarqube
